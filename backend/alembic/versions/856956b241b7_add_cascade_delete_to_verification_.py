"""add_cascade_delete_to_verification_tokens

Revision ID: 856956b241b7
Revises: 0697af398f47
Create Date: 2025-08-24 00:07:14.656531

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '856956b241b7'
down_revision: Union[str, Sequence[str], None] = '0697af398f47'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notifications_created_at'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_is_read'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_organization_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_type'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_temp_csv_storage_expires_at'), table_name='temp_csv_storage')
    op.drop_index(op.f('ix_temp_csv_storage_id'), table_name='temp_csv_storage')
    op.drop_index(op.f('ix_temp_csv_storage_organization_id'), table_name='temp_csv_storage')
    op.drop_index(op.f('ix_temp_csv_storage_session_id'), table_name='temp_csv_storage')
    op.drop_table('temp_csv_storage')
    op.alter_column('candidates', 'description',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_index(op.f('ix_dummy_candidates_hashed_national_id'), table_name='dummy_candidates')
    op.drop_index(op.f('ix_dummy_voters_voter_hashed_national_id'), table_name='dummy_voters')
    op.drop_constraint(op.f('verification_tokens_user_id_fkey'), 'verification_tokens', type_='foreignkey')
    op.create_foreign_key(None, 'verification_tokens', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_voters_is_api_voter'), table_name='voters')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_voters_is_api_voter'), 'voters', ['is_api_voter'], unique=False)
    op.drop_constraint(None, 'verification_tokens', type_='foreignkey')
    op.create_foreign_key(op.f('verification_tokens_user_id_fkey'), 'verification_tokens', 'users', ['user_id'], ['id'])
    op.create_index(op.f('ix_dummy_voters_voter_hashed_national_id'), 'dummy_voters', ['voter_hashed_national_id'], unique=False)
    op.create_index(op.f('ix_dummy_candidates_hashed_national_id'), 'dummy_candidates', ['hashed_national_id'], unique=False)
    op.alter_column('candidates', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
    op.create_table('temp_csv_storage',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('candidates_csv_content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('voters_csv_content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('candidates_filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('voters_filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('election_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_used', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('temp_csv_storage_pkey'))
    )
    op.create_index(op.f('ix_temp_csv_storage_session_id'), 'temp_csv_storage', ['session_id'], unique=True)
    op.create_index(op.f('ix_temp_csv_storage_organization_id'), 'temp_csv_storage', ['organization_id'], unique=False)
    op.create_index(op.f('ix_temp_csv_storage_id'), 'temp_csv_storage', ['id'], unique=False)
    op.create_index(op.f('ix_temp_csv_storage_expires_at'), 'temp_csv_storage', ['expires_at'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('priority', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('election_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('candidate_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('voter_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('additional_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('read_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['election_id'], ['elections.id'], name=op.f('fk_notifications_election_id'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.user_id'], name=op.f('fk_notifications_organization_id'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('notifications_pkey'))
    )
    op.create_index(op.f('ix_notifications_type'), 'notifications', ['type'], unique=False)
    op.create_index(op.f('ix_notifications_organization_id'), 'notifications', ['organization_id'], unique=False)
    op.create_index(op.f('ix_notifications_is_read'), 'notifications', ['is_read'], unique=False)
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_created_at'), 'notifications', ['created_at'], unique=False)
    # ### end Alembic commands ###
